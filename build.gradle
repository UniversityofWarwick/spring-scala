apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

group 'org.springframework.scala'
archivesBaseName = "spring-scala_2.12"

//set Java compiler -source and -target options
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
  springVersion = '4.1.4.RELEASE'
  scalaVersion = '2.12.5'
  scalaLibVersion = '2.12'
}

repositories {
  maven { url "http://repo.springsource.org/libs-snapshot" }
}

dependencies {
  // Spring
  optional("org.springframework:spring-aop:$springVersion")
  compile("org.springframework:spring-core:$springVersion")
  compile("org.springframework:spring-beans:$springVersion")
  compile("org.springframework:spring-context:$springVersion")
  optional("org.springframework:spring-jdbc:$springVersion")
  optional("org.springframework:spring-jms:$springVersion")
  optional("org.springframework:spring-web:$springVersion")
  optional("org.springframework:spring-test:$springVersion")

  // Scala
  compile("org.scala-lang:scala-library:$scalaVersion")
  compile("org.scala-lang:scala-reflect:$scalaVersion")
  //needs to be as separate jar file for scala 2.11
  compile("org.scala-lang.modules:scala-xml_$scalaLibVersion:1.0.6")

  // Jackson
  optional("com.fasterxml.jackson.module:jackson-module-scala_$scalaLibVersion:2.6.7.1")

  // Java EE
  provided("org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1")
  provided("javax.servlet:javax.servlet-api:3.0.1")
  provided("javax.inject:javax.inject:1")

  // Test
  testCompile("org.scalatest:scalatest_$scalaLibVersion:3.0.5")
  testCompile("junit:junit:4.12")
  testRuntime("org.hsqldb:hsqldb-j5:2.2.4")
  testRuntime("log4j:log4j:1.2.17")
  testCompile("org.springframework:spring-aspects:$springVersion")
}

//Java compiler settings
tasks.withType(JavaCompile) {
    //ignore conjunction warning
    options.compilerArgs << '-Xlint:-options'
}

tasks.withType(ScalaCompile) {
  scalaCompileOptions.additionalParameters = ["-feature", "-language:implicitConversions", "-language:reflectiveCalls"]
}

// upgrade to a different version of Gradle by changing this
// value then running `./gradlew wrapper`. Next time gradlew
// is run it will fetch and use that version.
task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionType = 'ALL'
}

buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

artifacts {
	archives jar
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: mavenRepositoryUrl) {
				authentication(userName: mavenRepositoryUsername, password: mavenRepositoryPassword)
			}

			pom.project {
				description "${project.description}"
				groupId "${project.group}"
				name "${project.name}"
				packaging 'jar'
				version "${project.version}"
			}
		}
	}
}
